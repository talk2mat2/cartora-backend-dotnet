// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cartoraServer.Data;

#nullable disable

namespace cartoraServer.Migrations
{
    [DbContext(typeof(AContext))]
    [Migration("20230605180738_updates2")]
    partial class updates2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("cartoraServer.models.ImgeUrll", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Productid")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Productid");

                    b.ToTable("ImgeUrll");
                });

            modelBuilder.Entity("cartoraServer.models.KnightModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("brandId")
                        .HasColumnType("int");

                    b.Property<int>("folowerId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("KnightModel");
                });

            modelBuilder.Entity("cartoraServer.models.LikeModel", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("LikeModel");
                });

            modelBuilder.Entity("cartoraServer.models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<bool>("Iscollection")
                        .HasColumnType("bit");

                    b.Property<int?>("Mediatype")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Snapshot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("frameColors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("stock")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("UserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("cartoraServer.models.tags", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Agric")
                        .HasColumnType("bit");

                    b.Property<bool>("Babies")
                        .HasColumnType("bit");

                    b.Property<bool>("Electronics")
                        .HasColumnType("bit");

                    b.Property<bool>("Equipments")
                        .HasColumnType("bit");

                    b.Property<bool>("Fashion")
                        .HasColumnType("bit");

                    b.Property<bool>("Furnitures")
                        .HasColumnType("bit");

                    b.Property<bool>("Health")
                        .HasColumnType("bit");

                    b.Property<bool>("Jobs")
                        .HasColumnType("bit");

                    b.Property<bool>("Properties")
                        .HasColumnType("bit");

                    b.Property<bool>("Repairs")
                        .HasColumnType("bit");

                    b.Property<bool>("Services")
                        .HasColumnType("bit");

                    b.Property<bool>("Sport")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("Vehicles")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("cartoraServer.models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("AboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("cartoraServer.models.ImgeUrll", b =>
                {
                    b.HasOne("cartoraServer.models.Product", "Product")
                        .WithMany("Media")
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("cartoraServer.models.Product", b =>
                {
                    b.HasOne("cartoraServer.models.Users", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("cartoraServer.models.tags", b =>
                {
                    b.HasOne("cartoraServer.models.Users", "User")
                        .WithOne("tags")
                        .HasForeignKey("cartoraServer.models.tags", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("cartoraServer.models.Product", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("cartoraServer.models.Users", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("tags");
                });
#pragma warning restore 612, 618
        }
    }
}
